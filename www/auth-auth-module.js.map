{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.page.html","webpack:///./src/app/auth/auth.page.scss","webpack:///./src/app/auth/auth.page.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>{{ isLogin ? 'Login' : 'Signup' }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-list>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">E-Mail</ion-label>\\n              <ion-input\\n                type=\\\"email\\\"\\n                ngModel\\n                name=\\\"email\\\"\\n                required\\n                email\\n                #emailCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should be a valid email address.\\n              </ion-label>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label position=\\\"floating\\\">Password</ion-label>\\n              <ion-input\\n                type=\\\"password\\\"\\n                ngModel\\n                name=\\\"password\\\"\\n                required\\n                minlength=\\\"6\\\"\\n                #passwordCtrl=\\\"ngModel\\\"\\n              ></ion-input>\\n            </ion-item>\\n            <ion-item\\n              *ngIf=\\\"!passwordCtrl.valid && passwordCtrl.touched\\\"\\n              lines=\\\"none\\\"\\n            >\\n              <ion-label>\\n                Should at least be 6 characters long.\\n              </ion-label>\\n            </ion-item>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size-sm=\\\"6\\\" offset-sm=\\\"3\\\">\\n          <ion-button\\n            type=\\\"button\\\"\\n            color=\\\"primary\\\"\\n            fill=\\\"clear\\\"\\n            expand=\\\"block\\\"\\n            (click)=\\\"onSwitchAuthMode()\\\"\\n          >\\n            Switch to {{ isLogin ? 'Signup' : 'Login' }}\\n          </ion-button>\\n          <ion-button\\n            type=\\\"submit\\\"\\n            color=\\\"primary\\\"\\n            expand=\\\"block\\\"\\n            [disabled]=\\\"!f.valid\\\"\\n          >\\n            {{ isLogin ? 'Login' : 'Signup' }}\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n\\n  <!-- <div text-center>\\n    <ion-spinner color=\\\"primary\\\" *ngIf=\\\"isLoading\\\"></ion-spinner>\\n  </div> -->\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\n\nimport { AuthService, AuthResponseData } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss']\n})\nexport class AuthPage implements OnInit {\n  isLoading = false;\n  isLogin = true;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) {}\n\n  ngOnInit() {}\n\n  authenticate(email: string, password: string) {\n    this.isLoading = true;\n    this.loadingCtrl\n      .create({ keyboardClose: true, message: 'Logging in...' })\n      .then(loadingEl => {\n        loadingEl.present();\n        let authObs: Observable<AuthResponseData>;\n        if (this.isLogin) {\n          authObs = this.authService.login(email, password);\n        } else {\n          authObs = this.authService.signup(email, password);\n        }\n        authObs.subscribe(\n          resData => {\n            console.log(resData);\n            this.isLoading = false;\n            loadingEl.dismiss();\n            this.router.navigateByUrl('/places/tabs/discover');\n          },\n          errRes => {\n            loadingEl.dismiss();\n            const code = errRes.error.error.message;\n            let message = 'Could not sign you up, please try again.';\n            if (code === 'EMAIL_EXISTS') {\n              message = 'This email address exists already!';\n            } else if (code === 'EMAIL_NOT_FOUND') {\n              message = 'E-Mail address could not be found.';\n            } else if (code === 'INVALID_PASSWORD') {\n              message = 'This password is not correct.';\n            }\n            this.showAlert(message);\n          }\n        );\n      });\n  }\n\n  onSwitchAuthMode() {\n    this.isLogin = !this.isLogin;\n  }\n\n  onSubmit(form: NgForm) {\n    if (!form.valid) {\n      return;\n    }\n    const email = form.value.email;\n    const password = form.value.password;\n\n    this.authenticate(email, password);\n    form.reset();\n  }\n\n  private showAlert(message: string) {\n    this.alertCtrl\n      .create({\n        header: 'Authentication failed',\n        message: message,\n        buttons: ['Okay']\n      })\n      .then(alertEl => alertEl.present());\n  }\n}\n"],"sourceRoot":""}